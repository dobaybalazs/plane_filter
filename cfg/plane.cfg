#!/usr/bin/env python
PACKAGE = "plane_filter"

from dynamic_reconfigure.parameter_generator_catkin import *

gen=ParameterGenerator()
gen.add('useBoxFilter',bool_t,0,"Use box filtering",True)
gen.add('max_x',double_t,0,"Max_x",20.0,-50.0,100)
gen.add('min_x',double_t,0,"Min_x",2.0,-50.0,100)
gen.add('max_y',double_t,0,"Max_y",10.0,-50,50)
gen.add('min_y',double_t,0,"Min_y",-5.0,-50,50)
gen.add('max_z',double_t,0,"Max_z",-1.0,-10,10)
gen.add('min_z',double_t,0,"Min_z",-1.6,-10,10)
gen.add('useVoxelF',bool_t,0,"Use voxel filtering",False)
gen.add('lx',double_t,0,"leaf x",0.2,0,5)
gen.add('ly',double_t,0,"leaf y",0.2,0,5)
gen.add('lz',double_t,0,"leaf z",0.2,0,5)
gen.add('usePlaneFilter',bool_t,0,"Should the plane filter be used",False)
gen.add('invertFilter',bool_t,0,"Should the plane filter be inverted(true:ground left out, false:ground kept)",True)
gen.add('ransac_dist',double_t,0,"RANSac distance threshold",0.015,0.0,1.0)
gen.add('rradius_min',double_t,0,"RANSac radius min threshold",0.00,0.0,1.0)
gen.add('rradius_max',double_t,0,"RANSac radius max threshold",1.0,0.0,1.0)

exit(gen.generate(PACKAGE, "plane_filter", "plane_filter"))